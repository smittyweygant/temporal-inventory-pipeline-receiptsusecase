plugins {
    id 'java'
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    // implementation 'io.temporal:temporal-sdk:1.22.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    implementation "io.temporal:temporal-spring-boot-starter:1.24.0"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:5.11.0"

    testImplementation(platform("org.junit:junit-bom:5.10.2"))
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine"

    // fix for slf4j error
    implementation 'org.slf4j:slf4j-api:2.0.0'
    implementation 'ch.qos.logback:logback-classic:1.3.0'


    // Add other dependencies here
}


sourceCompatibility = '19'
targetCompatibility = '19'

task execute(type: JavaExec) {
    mainClass = findProperty("mainClass") ?: ""
    classpath = sourceSets.main.runtimeClasspath
    if (project.hasProperty("arg")) {
        args project.getProperty("arg").split("\\s+")
    }
}